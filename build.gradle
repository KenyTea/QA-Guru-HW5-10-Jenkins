plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.16.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.12",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.32",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    //systemProperty("browserSize", System.property("browserSize", "400 400")) // Можно задавать здесь
    systemProperties(System.getProperties()) // Запустить с параметрами
    useJUnitPlatform()
    //System.setProperty("Url", "$Url")

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

//task properties_test(type: Test){  // Запускать только с @Tag("properties")
//    useJUnitPlatform{
//        includeTags "properties"
//    }
//}
//
//task lambda_test(type: Test){  // Запускать только с @Tag("properties")
//    useJUnitPlatform{
//        includeTags "Lambda test"
//    }
//}

//task many_test(type: Test){  // Запускать несколько тестов с @Tag("properties") @Tag("testss")
//    useJUnitPlatform{
//        includeTags "properties"
//        includeTags "testss"
//        excludeTags "Prod"
//    }
//}